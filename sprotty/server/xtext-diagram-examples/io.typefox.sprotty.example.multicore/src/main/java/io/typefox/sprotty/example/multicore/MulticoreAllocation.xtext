/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
grammar io.typefox.sprotty.example.multicore.MulticoreAllocation with org.eclipse.xtext.common.Terminals

generate multicoreAllocation "http://www.typefox.io/sprotty/example/multicore/MulticoreAllocation"

Program:
	'program' name=ID ('for' numberOfCores=INT 'cores')?
	declarations+=Declaration*;

Declaration:
	Kernel | Task | Barrier | Step;

Kernel:
	'kernel' name=ID ('{'
		('duration' '=' duration=INT)?
		('stackSize' '=' stackSize=INT)?
		('stackStartAddr' '=' stackBeginAddr=HEX)?
	'}')?;

Task:
	'task' name=ID ':' 'execute' kernel=[Kernel];

Barrier:
	'barrier' name=ID ':' 'join' joined+=[Task] (',' joined+=[Task])*
	('then' (triggered+=Task | '{' triggered+=Task* '}'))?;	

Step:
	'step' index=INT '{'
		allocations+=TaskAllocation*
	'}';

TaskAllocation:
	TaskRunning | TaskFinished;

TaskRunning:
	'core' core=INT 'runs' task=[Task] ('{'
		('$pc' '=' programCounter=HEX)?
		('$sp' '=' stackPointer=HEX)?
		('srcfile' '=' sourceFile=STRING)?
		('stackTrace' '=' stackTrace=STRING)?
	'}')?; 

TaskFinished:
	'core' core=INT 'finished' task=[Task] ('{'
		('$pc' '=' programCounter=HEX)?
		('$sp' '=' stackPointer=HEX)?
		('srcfile' '=' sourceFile=STRING)?
		('stackTrace' '=' stackTrace=STRING)?
	'}')?;

	
terminal HEX:
    '0x' ('0'..'9'| 'a'..'f'| 'A'..'F')+;
