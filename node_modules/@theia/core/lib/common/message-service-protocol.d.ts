/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { ILogger } from "./logger";
export declare const messageServicePath = "/services/messageService";
export declare enum MessageType {
    Error = 1,
    Warning = 2,
    Info = 3,
    Log = 4
}
export interface Message {
    type: MessageType;
    text: string;
    actions?: string[];
    options?: MessageOptions;
}
export interface MessageOptions {
    timeout?: number;
}
export declare class MessageClient {
    protected readonly logger: ILogger;
    constructor(logger: ILogger);
    /**
     * Show a message of the given type and possible actions to the user.
     * Resolve to a chosen action.
     * Never reject.
     *
     * To be implemented by an extension, e.g. by the messages extension.
     */
    showMessage(message: Message): Promise<string | undefined>;
}
export declare class DispatchingMessageClient extends MessageClient {
    readonly clients: Set<MessageClient>;
    showMessage(message: Message): Promise<string | undefined>;
}
//# sourceMappingURL=message-service-protocol.d.ts.map